from .base import Loader as BaseLoader
from _typeshed import Incomplete
from collections.abc import Generator
from django.template import TemplateDoesNotExist as TemplateDoesNotExist
from django.template.backends.django import copy_exception as copy_exception

class Loader(BaseLoader):
    get_template_cache: Incomplete
    loaders: Incomplete
    def __init__(self, engine, loaders) -> None: ...
    def get_dirs(self) -> Generator[Incomplete, Incomplete]: ...
    def get_contents(self, origin): ...
    def get_template(self, template_name, skip: Incomplete | None = None): ...
    def get_template_sources(self, template_name) -> Generator[Incomplete, Incomplete]: ...
    def cache_key(self, template_name, skip: Incomplete | None = None): ...
    def generate_hash(self, values): ...
    def reset(self) -> None: ...
