from .loader import get_template as get_template, select_template as select_template
from _typeshed import Incomplete
from django.http import HttpResponse as HttpResponse

class ContentNotRenderedError(Exception): ...

class SimpleTemplateResponse(HttpResponse):
    rendering_attrs: Incomplete
    template_name: Incomplete
    context_data: Incomplete
    using: Incomplete
    def __init__(self, template, context: Incomplete | None = None, content_type: Incomplete | None = None, status: Incomplete | None = None, charset: Incomplete | None = None, using: Incomplete | None = None, headers: Incomplete | None = None) -> None: ...
    def resolve_template(self, template): ...
    def resolve_context(self, context): ...
    @property
    def rendered_content(self): ...
    def add_post_render_callback(self, callback) -> None: ...
    def render(self): ...
    @property
    def is_rendered(self): ...
    def __iter__(self): ...
    @property
    def content(self): ...
    @content.setter
    def content(self, value) -> None: ...

class TemplateResponse(SimpleTemplateResponse):
    rendering_attrs: Incomplete
    def __init__(self, request, template, context: Incomplete | None = None, content_type: Incomplete | None = None, status: Incomplete | None = None, charset: Incomplete | None = None, using: Incomplete | None = None, headers: Incomplete | None = None) -> None: ...
