from .config import AppConfig as AppConfig
from _typeshed import Incomplete
from django.core.exceptions import AppRegistryNotReady as AppRegistryNotReady, ImproperlyConfigured as ImproperlyConfigured

class Apps:
    all_models: Incomplete
    app_configs: Incomplete
    stored_app_configs: Incomplete
    apps_ready: bool
    ready_event: Incomplete
    loading: bool
    def __init__(self, installed_apps=()) -> None: ...
    models_ready: bool
    ready: bool
    def populate(self, installed_apps: Incomplete | None = None) -> None: ...
    def check_apps_ready(self) -> None: ...
    def check_models_ready(self) -> None: ...
    def get_app_configs(self): ...
    def get_app_config(self, app_label): ...
    def get_models(self, include_auto_created: bool = False, include_swapped: bool = False): ...
    def get_model(self, app_label, model_name: Incomplete | None = None, require_ready: bool = True): ...
    def register_model(self, app_label, model) -> None: ...
    def is_installed(self, app_name): ...
    def get_containing_app_config(self, object_name): ...
    def get_registered_model(self, app_label, model_name): ...
    def get_swappable_settings_name(self, to_string): ...
    def set_available_apps(self, available) -> None: ...
    def unset_available_apps(self) -> None: ...
    def set_installed_apps(self, installed) -> None: ...
    def unset_installed_apps(self) -> None: ...
    def clear_cache(self) -> None: ...
    def lazy_model_operation(self, function, *model_keys) -> None: ...
    def do_pending_operations(self, model) -> None: ...

apps: Incomplete
