from _typeshed import Incomplete
from django.core.exceptions import SuspiciousOperation as SuspiciousOperation

class ArchiveException(Exception): ...
class UnrecognizedArchiveFormat(ArchiveException): ...

def extract(path, to_path) -> None: ...

class Archive:
    def __init__(self, file) -> None: ...
    def __enter__(self): ...
    def __exit__(self, exc_type: type[BaseException] | None, exc_value: BaseException | None, traceback: types.TracebackType | None) -> None: ...
    def extract(self, to_path) -> None: ...
    def list(self) -> None: ...
    def close(self) -> None: ...

class BaseArchive:
    def split_leading_dir(self, path): ...
    def has_leading_dir(self, paths): ...
    def target_filename(self, to_path, name): ...
    def extract(self) -> None: ...
    def list(self) -> None: ...

class TarArchive(BaseArchive):
    def __init__(self, file) -> None: ...
    def list(self, *args, **kwargs) -> None: ...
    def extract(self, to_path) -> None: ...
    def close(self) -> None: ...

class ZipArchive(BaseArchive):
    def __init__(self, file) -> None: ...
    def list(self, *args, **kwargs) -> None: ...
    def extract(self, to_path) -> None: ...
    def close(self) -> None: ...

extension_map: Incomplete
