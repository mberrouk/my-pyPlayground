import logging
from _typeshed import Incomplete
from django.conf import settings as settings
from django.core import mail as mail
from django.core.mail import get_connection as get_connection
from django.core.management.color import color_style as color_style
from django.utils.module_loading import import_string as import_string

request_logger: Incomplete
DEFAULT_LOGGING: Incomplete

def configure_logging(logging_config, logging_settings) -> None: ...

class AdminEmailHandler(logging.Handler):
    include_html: Incomplete
    email_backend: Incomplete
    reporter_class: Incomplete
    def __init__(self, include_html: bool = False, email_backend: Incomplete | None = None, reporter_class: Incomplete | None = None) -> None: ...
    def emit(self, record) -> None: ...
    def send_mail(self, subject, message, *args, **kwargs) -> None: ...
    def connection(self): ...
    def format_subject(self, subject): ...

class CallbackFilter(logging.Filter):
    callback: Incomplete
    def __init__(self, callback) -> None: ...
    def filter(self, record): ...

class RequireDebugFalse(logging.Filter):
    def filter(self, record): ...

class RequireDebugTrue(logging.Filter):
    def filter(self, record): ...

class ServerFormatter(logging.Formatter):
    default_time_format: str
    style: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def format(self, record): ...
    def uses_server_time(self): ...

def log_response(message, *args, response: Incomplete | None = None, request: Incomplete | None = None, logger=..., level: Incomplete | None = None, exception: Incomplete | None = None) -> None: ...
