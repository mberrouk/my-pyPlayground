from _typeshed import Incomplete
from django.apps import apps as apps
from django.db import models as models
from django.db.models import Q as Q

class ContentTypeManager(models.Manager):
    use_in_migrations: bool
    def __init__(self, *args, **kwargs) -> None: ...
    def get_by_natural_key(self, app_label, model): ...
    def get_for_model(self, model, for_concrete_model: bool = True): ...
    def get_for_models(self, *models, for_concrete_models: bool = True): ...
    def get_for_id(self, id): ...
    def clear_cache(self) -> None: ...

class ContentType(models.Model):
    app_label: Incomplete
    model: Incomplete
    objects: Incomplete
    class Meta:
        verbose_name: Incomplete
        verbose_name_plural: Incomplete
        db_table: str
        unique_together: Incomplete
    @property
    def name(self): ...
    @property
    def app_labeled_name(self): ...
    def model_class(self): ...
    def get_object_for_this_type(self, using: Incomplete | None = None, **kwargs): ...
    def get_all_objects_for_this_type(self, **kwargs): ...
    def natural_key(self): ...
