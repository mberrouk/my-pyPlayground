from _typeshed import Incomplete
from django.conf import settings as settings
from django.contrib.staticfiles import utils as utils
from django.contrib.staticfiles.views import serve as serve
from django.core.handlers.asgi import ASGIHandler as ASGIHandler
from django.core.handlers.exception import response_for_exception as response_for_exception
from django.core.handlers.wsgi import WSGIHandler as WSGIHandler, get_path_info as get_path_info
from django.http import Http404 as Http404

class StaticFilesHandlerMixin:
    handles_files: bool
    def load_middleware(self) -> None: ...
    def get_base_url(self): ...
    def file_path(self, url): ...
    def serve(self, request): ...
    def get_response(self, request): ...
    async def get_response_async(self, request): ...

class StaticFilesHandler(StaticFilesHandlerMixin, WSGIHandler):
    application: Incomplete
    base_url: Incomplete
    def __init__(self, application) -> None: ...
    def __call__(self, environ, start_response): ...

class ASGIStaticFilesHandler(StaticFilesHandlerMixin, ASGIHandler):
    application: Incomplete
    base_url: Incomplete
    def __init__(self, application) -> None: ...
    async def __call__(self, scope, receive, send): ...
    async def get_response_async(self, request): ...
