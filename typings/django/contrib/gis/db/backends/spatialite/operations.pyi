from _typeshed import Incomplete
from django.contrib.gis.db import models as models
from django.contrib.gis.db.backends.base.operations import BaseSpatialOperations as BaseSpatialOperations
from django.contrib.gis.db.backends.spatialite.adapter import SpatiaLiteAdapter as SpatiaLiteAdapter
from django.contrib.gis.db.backends.utils import SpatialOperator as SpatialOperator
from django.contrib.gis.geos.geometry import GEOSGeometry as GEOSGeometry, GEOSGeometryBase as GEOSGeometryBase
from django.contrib.gis.geos.prototypes.io import wkb_r as wkb_r
from django.contrib.gis.measure import Distance as Distance
from django.core.exceptions import ImproperlyConfigured as ImproperlyConfigured
from django.db.backends.sqlite3.operations import DatabaseOperations as DatabaseOperations
from django.utils.functional import cached_property as cached_property
from django.utils.version import get_version_tuple as get_version_tuple

class SpatialiteNullCheckOperator(SpatialOperator):
    def as_sql(self, connection, lookup, template_params, sql_params): ...

class SpatiaLiteOperations(BaseSpatialOperations, DatabaseOperations):
    name: str
    spatialite: bool
    Adapter = SpatiaLiteAdapter
    collect: str
    extent: str
    makeline: str
    unionagg: str
    from_text: str
    gis_operators: Incomplete
    disallowed_aggregates: Incomplete
    select: str
    function_names: Incomplete
    def unsupported_functions(self): ...
    def spatial_version(self): ...
    def convert_extent(self, box): ...
    def geo_db_type(self, f) -> None: ...
    def get_distance(self, f, value, lookup_type): ...
    def geos_version(self): ...
    def proj_version(self): ...
    def lwgeom_version(self): ...
    def rttopo_version(self): ...
    def geom_lib_version(self): ...
    def spatialite_version(self): ...
    def spatialite_version_tuple(self): ...
    def spatial_aggregate_name(self, agg_name): ...
    def geometry_columns(self): ...
    def spatial_ref_sys(self): ...
    def get_geometry_converter(self, expression): ...
