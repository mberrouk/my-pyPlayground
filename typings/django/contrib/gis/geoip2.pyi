from _typeshed import Incomplete

__all__ = ['HAS_GEOIP2']

HAS_GEOIP2: bool

class GeoIP2Exception(Exception): ...

class GeoIP2:
    MODE_AUTO: int
    MODE_MMAP_EXT: int
    MODE_MMAP: int
    MODE_FILE: int
    MODE_MEMORY: int
    cache_options: Incomplete
    def __init__(self, path: Incomplete | None = None, cache: int = 0, country: Incomplete | None = None, city: Incomplete | None = None) -> None: ...
    def __del__(self) -> None: ...
    def is_city(self): ...
    def is_country(self): ...
    def city(self, query): ...
    def country_code(self, query): ...
    def country_name(self, query): ...
    def country(self, query): ...
    def coords(self, query, ordering=('longitude', 'latitude')): ...
    def lon_lat(self, query): ...
    def lat_lon(self, query): ...
    def geos(self, query): ...
    @classmethod
    def open(cls, full_path, cache): ...
