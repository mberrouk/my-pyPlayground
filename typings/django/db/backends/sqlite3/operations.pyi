from .base import Database as Database
from _typeshed import Incomplete
from django.conf import settings as settings
from django.core.exceptions import FieldError as FieldError
from django.db import DatabaseError as DatabaseError, NotSupportedError as NotSupportedError, models as models
from django.db.backends.base.operations import BaseDatabaseOperations as BaseDatabaseOperations
from django.db.models.constants import OnConflict as OnConflict
from django.db.models.expressions import Col as Col
from django.utils import timezone as timezone
from django.utils.dateparse import parse_date as parse_date, parse_datetime as parse_datetime, parse_time as parse_time
from django.utils.functional import cached_property as cached_property

class DatabaseOperations(BaseDatabaseOperations):
    cast_char_field_without_max_length: str
    cast_data_types: Incomplete
    explain_prefix: str
    jsonfield_datatype_values: Incomplete
    def bulk_batch_size(self, fields, objs): ...
    def check_expression_support(self, expression) -> None: ...
    def date_extract_sql(self, lookup_type, sql, params): ...
    def fetch_returned_insert_rows(self, cursor): ...
    def format_for_duration_arithmetic(self, sql): ...
    def date_trunc_sql(self, lookup_type, sql, params, tzname: Incomplete | None = None): ...
    def time_trunc_sql(self, lookup_type, sql, params, tzname: Incomplete | None = None): ...
    def datetime_cast_date_sql(self, sql, params, tzname): ...
    def datetime_cast_time_sql(self, sql, params, tzname): ...
    def datetime_extract_sql(self, lookup_type, sql, params, tzname): ...
    def datetime_trunc_sql(self, lookup_type, sql, params, tzname): ...
    def time_extract_sql(self, lookup_type, sql, params): ...
    def pk_default_value(self): ...
    def last_executed_query(self, cursor, sql, params): ...
    def quote_name(self, name): ...
    def no_limit_value(self): ...
    def sql_flush(self, style, tables, *, reset_sequences: bool = False, allow_cascade: bool = False): ...
    def sequence_reset_by_name_sql(self, style, sequences): ...
    def adapt_datetimefield_value(self, value): ...
    def adapt_timefield_value(self, value): ...
    def get_db_converters(self, expression): ...
    def convert_datetimefield_value(self, value, expression, connection): ...
    def convert_datefield_value(self, value, expression, connection): ...
    def convert_timefield_value(self, value, expression, connection): ...
    def get_decimalfield_converter(self, expression): ...
    def convert_uuidfield_value(self, value, expression, connection): ...
    def convert_booleanfield_value(self, value, expression, connection): ...
    def combine_expression(self, connector, sub_expressions): ...
    def combine_duration_expression(self, connector, sub_expressions): ...
    def integer_field_range(self, internal_type): ...
    def subtract_temporals(self, internal_type, lhs, rhs): ...
    def insert_statement(self, on_conflict: Incomplete | None = None): ...
    def return_insert_columns(self, fields): ...
    def on_conflict_suffix_sql(self, fields, on_conflict, update_fields, unique_fields): ...
    def force_group_by(self): ...
