from _typeshed import Incomplete
from django.apps.registry import Apps as Apps
from django.db import NotSupportedError as NotSupportedError
from django.db.backends.base.schema import BaseDatabaseSchemaEditor as BaseDatabaseSchemaEditor
from django.db.backends.ddl_references import Statement as Statement
from django.db.backends.utils import strip_quotes as strip_quotes
from django.db.models import NOT_PROVIDED as NOT_PROVIDED, UniqueConstraint as UniqueConstraint

class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
    sql_delete_table: str
    sql_create_fk: Incomplete
    sql_create_inline_fk: str
    sql_create_column_inline_fk = sql_create_inline_fk
    sql_delete_column: str
    sql_create_unique: str
    sql_delete_unique: str
    sql_alter_table_comment: Incomplete
    sql_alter_column_comment: Incomplete
    def __enter__(self): ...
    def __exit__(self, exc_type: type[BaseException] | None, exc_value: BaseException | None, traceback: types.TracebackType | None) -> None: ...
    def quote_value(self, value): ...
    def prepare_default(self, value): ...
    def delete_model(self, model, handle_autom2m: bool = True) -> None: ...
    def add_field(self, model, field) -> None: ...
    def remove_field(self, model, field) -> None: ...
    def add_constraint(self, model, constraint) -> None: ...
    def remove_constraint(self, model, constraint) -> None: ...
