from _typeshed import Incomplete
from django.conf import settings as settings
from django.core.exceptions import FieldError as FieldError
from django.db.backends.ddl_references import Columns as Columns, Expressions as Expressions, ForeignKeyName as ForeignKeyName, IndexName as IndexName, Statement as Statement, Table as Table
from django.db.backends.utils import names_digest as names_digest, split_identifier as split_identifier, truncate_name as truncate_name
from django.db.models import Deferrable as Deferrable, Index as Index, NOT_PROVIDED as NOT_PROVIDED
from django.db.models.sql import Query as Query
from django.db.transaction import TransactionManagementError as TransactionManagementError, atomic as atomic
from django.utils import timezone as timezone

logger: Incomplete

class BaseDatabaseSchemaEditor:
    sql_create_table: str
    sql_rename_table: str
    sql_retablespace_table: str
    sql_delete_table: str
    sql_create_column: str
    sql_alter_column: str
    sql_alter_column_type: str
    sql_alter_column_null: str
    sql_alter_column_not_null: str
    sql_alter_column_default: str
    sql_alter_column_no_default: str
    sql_alter_column_no_default_null = sql_alter_column_no_default
    sql_delete_column: str
    sql_rename_column: str
    sql_update_with_default: str
    sql_unique_constraint: str
    sql_check_constraint: str
    sql_delete_constraint: str
    sql_constraint: str
    sql_create_check: str
    sql_delete_check = sql_delete_constraint
    sql_create_unique: str
    sql_delete_unique = sql_delete_constraint
    sql_create_fk: str
    sql_create_inline_fk: Incomplete
    sql_create_column_inline_fk: Incomplete
    sql_delete_fk = sql_delete_constraint
    sql_create_index: str
    sql_create_unique_index: str
    sql_rename_index: str
    sql_delete_index: str
    sql_create_pk: str
    sql_delete_pk = sql_delete_constraint
    sql_delete_procedure: str
    sql_alter_table_comment: str
    sql_alter_column_comment: str
    connection: Incomplete
    collect_sql: Incomplete
    collected_sql: Incomplete
    atomic_migration: Incomplete
    def __init__(self, connection, collect_sql: bool = False, atomic: bool = True) -> None: ...
    deferred_sql: Incomplete
    atomic: Incomplete
    def __enter__(self): ...
    def __exit__(self, exc_type: type[BaseException] | None, exc_value: BaseException | None, traceback: types.TracebackType | None) -> None: ...
    def execute(self, sql, params=()) -> None: ...
    def quote_name(self, name): ...
    def table_sql(self, model): ...
    def column_sql(self, model, field, include_default: bool = False): ...
    def skip_default(self, field): ...
    def skip_default_on_alter(self, field): ...
    def prepare_default(self, value) -> None: ...
    def db_default_sql(self, field): ...
    def effective_default(self, field): ...
    def quote_value(self, value) -> None: ...
    def create_model(self, model) -> None: ...
    def delete_model(self, model) -> None: ...
    def add_index(self, model, index) -> None: ...
    def remove_index(self, model, index) -> None: ...
    def rename_index(self, model, old_index, new_index) -> None: ...
    def add_constraint(self, model, constraint) -> None: ...
    def remove_constraint(self, model, constraint) -> None: ...
    def alter_unique_together(self, model, old_unique_together, new_unique_together) -> None: ...
    def alter_index_together(self, model, old_index_together, new_index_together) -> None: ...
    def alter_db_table(self, model, old_db_table, new_db_table) -> None: ...
    def alter_db_table_comment(self, model, old_db_table_comment, new_db_table_comment) -> None: ...
    def alter_db_tablespace(self, model, old_db_tablespace, new_db_tablespace) -> None: ...
    def add_field(self, model, field): ...
    def remove_field(self, model, field): ...
    def alter_field(self, model, old_field, new_field, strict: bool = False): ...
    def remove_procedure(self, procedure_name, param_types=()) -> None: ...
