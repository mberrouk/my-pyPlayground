from _typeshed import Incomplete
from typing import NamedTuple

class TableInfo(NamedTuple):
    name: Incomplete
    type: Incomplete

class FieldInfo(NamedTuple):
    name: Incomplete
    type_code: Incomplete
    display_size: Incomplete
    internal_size: Incomplete
    precision: Incomplete
    scale: Incomplete
    null_ok: Incomplete
    default: Incomplete
    collation: Incomplete

class BaseDatabaseIntrospection:
    data_types_reverse: Incomplete
    connection: Incomplete
    def __init__(self, connection) -> None: ...
    def get_field_type(self, data_type, description): ...
    def identifier_converter(self, name): ...
    def table_names(self, cursor: Incomplete | None = None, include_views: bool = False): ...
    def get_table_list(self, cursor) -> None: ...
    def get_table_description(self, cursor, table_name) -> None: ...
    def get_migratable_models(self): ...
    def django_table_names(self, only_existing: bool = False, include_views: bool = True): ...
    def installed_models(self, tables): ...
    def sequence_list(self): ...
    def get_sequences(self, cursor, table_name, table_fields=()) -> None: ...
    def get_relations(self, cursor, table_name) -> None: ...
    def get_primary_key_column(self, cursor, table_name): ...
    def get_primary_key_columns(self, cursor, table_name): ...
    def get_constraints(self, cursor, table_name) -> None: ...
