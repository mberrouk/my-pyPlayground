from _typeshed import Incomplete
from collections.abc import Generator
from django.conf import settings as settings
from django.core.exceptions import ImproperlyConfigured as ImproperlyConfigured
from django.db import DEFAULT_DB_ALIAS as DEFAULT_DB_ALIAS, DatabaseError as DatabaseError, NotSupportedError as NotSupportedError
from django.db.backends import utils as utils
from django.db.backends.base.validation import BaseDatabaseValidation as BaseDatabaseValidation
from django.db.backends.signals import connection_created as connection_created
from django.db.backends.utils import debug_transaction as debug_transaction
from django.db.transaction import TransactionManagementError as TransactionManagementError
from django.db.utils import DatabaseErrorWrapper as DatabaseErrorWrapper, ProgrammingError as ProgrammingError
from django.utils.asyncio import async_unsafe as async_unsafe
from django.utils.functional import cached_property as cached_property

NO_DB_ALIAS: str
RAN_DB_VERSION_CHECK: Incomplete
logger: Incomplete

class BaseDatabaseWrapper:
    data_types: Incomplete
    data_types_suffix: Incomplete
    data_type_check_constraints: Incomplete
    ops: Incomplete
    vendor: str
    display_name: str
    SchemaEditorClass: Incomplete
    client_class: Incomplete
    creation_class: Incomplete
    features_class: Incomplete
    introspection_class: Incomplete
    ops_class: Incomplete
    validation_class = BaseDatabaseValidation
    queries_limit: int
    connection: Incomplete
    settings_dict: Incomplete
    alias: Incomplete
    queries_log: Incomplete
    force_debug_cursor: bool
    autocommit: bool
    in_atomic_block: bool
    savepoint_state: int
    savepoint_ids: Incomplete
    atomic_blocks: Incomplete
    commit_on_exit: bool
    needs_rollback: bool
    rollback_exc: Incomplete
    close_at: Incomplete
    closed_in_transaction: bool
    errors_occurred: bool
    health_check_enabled: bool
    health_check_done: bool
    run_on_commit: Incomplete
    run_commit_hooks_on_set_autocommit_on: bool
    execute_wrappers: Incomplete
    client: Incomplete
    creation: Incomplete
    features: Incomplete
    introspection: Incomplete
    validation: Incomplete
    def __init__(self, settings_dict, alias=...) -> None: ...
    def ensure_timezone(self): ...
    def timezone(self): ...
    def timezone_name(self): ...
    @property
    def queries_logged(self): ...
    @property
    def queries(self): ...
    def get_database_version(self) -> None: ...
    def check_database_version_supported(self) -> None: ...
    def get_connection_params(self) -> None: ...
    def get_new_connection(self, conn_params) -> None: ...
    def init_connection_state(self) -> None: ...
    def create_cursor(self, name: Incomplete | None = None) -> None: ...
    def connect(self) -> None: ...
    def check_settings(self) -> None: ...
    def ensure_connection(self) -> None: ...
    def cursor(self): ...
    def commit(self) -> None: ...
    def rollback(self) -> None: ...
    def close(self) -> None: ...
    def savepoint(self): ...
    def savepoint_rollback(self, sid) -> None: ...
    def savepoint_commit(self, sid) -> None: ...
    def clean_savepoints(self) -> None: ...
    def get_autocommit(self): ...
    def set_autocommit(self, autocommit, force_begin_transaction_with_broken_autocommit: bool = False) -> None: ...
    def get_rollback(self): ...
    def set_rollback(self, rollback) -> None: ...
    def validate_no_atomic_block(self) -> None: ...
    def validate_no_broken_transaction(self) -> None: ...
    def constraint_checks_disabled(self) -> Generator[None]: ...
    def disable_constraint_checking(self): ...
    def enable_constraint_checking(self) -> None: ...
    def check_constraints(self, table_names: Incomplete | None = None) -> None: ...
    def is_usable(self) -> None: ...
    def close_if_health_check_failed(self) -> None: ...
    def close_if_unusable_or_obsolete(self) -> None: ...
    @property
    def allow_thread_sharing(self): ...
    def inc_thread_sharing(self) -> None: ...
    def dec_thread_sharing(self) -> None: ...
    def validate_thread_sharing(self) -> None: ...
    def prepare_database(self) -> None: ...
    def wrap_database_errors(self): ...
    def chunked_cursor(self): ...
    def make_debug_cursor(self, cursor): ...
    def make_cursor(self, cursor): ...
    def temporary_connection(self) -> Generator[Incomplete]: ...
    def schema_editor(self, *args, **kwargs): ...
    def on_commit(self, func, robust: bool = False) -> None: ...
    def run_and_clear_commit_hooks(self) -> None: ...
    def execute_wrapper(self, wrapper) -> Generator[None]: ...
    def copy(self, alias: Incomplete | None = None): ...
