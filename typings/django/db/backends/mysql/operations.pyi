from _typeshed import Incomplete
from django.conf import settings as settings
from django.db.backends.base.operations import BaseDatabaseOperations as BaseDatabaseOperations
from django.db.backends.utils import split_tzname_delta as split_tzname_delta
from django.db.models import Exists as Exists, ExpressionWrapper as ExpressionWrapper, Lookup as Lookup
from django.db.models.constants import OnConflict as OnConflict
from django.utils import timezone as timezone
from django.utils.encoding import force_str as force_str

class DatabaseOperations(BaseDatabaseOperations):
    compiler_module: str
    integer_field_ranges: Incomplete
    cast_data_types: Incomplete
    cast_char_field_without_max_length: str
    explain_prefix: str
    def date_extract_sql(self, lookup_type, sql, params): ...
    def date_trunc_sql(self, lookup_type, sql, params, tzname: Incomplete | None = None): ...
    def datetime_cast_date_sql(self, sql, params, tzname): ...
    def datetime_cast_time_sql(self, sql, params, tzname): ...
    def datetime_extract_sql(self, lookup_type, sql, params, tzname): ...
    def datetime_trunc_sql(self, lookup_type, sql, params, tzname): ...
    def time_trunc_sql(self, lookup_type, sql, params, tzname: Incomplete | None = None): ...
    def fetch_returned_insert_rows(self, cursor): ...
    def format_for_duration_arithmetic(self, sql): ...
    def force_no_ordering(self): ...
    def adapt_decimalfield_value(self, value, max_digits: Incomplete | None = None, decimal_places: Incomplete | None = None): ...
    def last_executed_query(self, cursor, sql, params): ...
    def no_limit_value(self): ...
    def quote_name(self, name): ...
    def return_insert_columns(self, fields): ...
    def sql_flush(self, style, tables, *, reset_sequences: bool = False, allow_cascade: bool = False): ...
    def sequence_reset_by_name_sql(self, style, sequences): ...
    def validate_autopk_value(self, value): ...
    def adapt_datetimefield_value(self, value): ...
    def adapt_timefield_value(self, value): ...
    def max_name_length(self): ...
    def pk_default_value(self): ...
    def combine_expression(self, connector, sub_expressions): ...
    def get_db_converters(self, expression): ...
    def convert_booleanfield_value(self, value, expression, connection): ...
    def convert_datetimefield_value(self, value, expression, connection): ...
    def convert_uuidfield_value(self, value, expression, connection): ...
    def binary_placeholder_sql(self, value): ...
    def subtract_temporals(self, internal_type, lhs, rhs): ...
    def explain_query_prefix(self, format: Incomplete | None = None, **options): ...
    def regex_lookup(self, lookup_type): ...
    def insert_statement(self, on_conflict: Incomplete | None = None): ...
    def lookup_cast(self, lookup_type, internal_type: Incomplete | None = None): ...
    def conditional_expression_supported_in_where_clause(self, expression): ...
    def on_conflict_suffix_sql(self, fields, on_conflict, update_fields, unique_fields): ...
