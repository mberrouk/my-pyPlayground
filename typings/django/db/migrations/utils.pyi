from _typeshed import Incomplete
from collections.abc import Generator
from django.db.models.fields.related import RECURSIVE_RELATIONSHIP_CONSTANT as RECURSIVE_RELATIONSHIP_CONSTANT
from typing import NamedTuple

class FieldReference(NamedTuple):
    to: Incomplete
    through: Incomplete

COMPILED_REGEX_TYPE: Incomplete

class RegexObject:
    pattern: Incomplete
    flags: Incomplete
    def __init__(self, obj) -> None: ...
    def __eq__(self, other): ...

def get_migration_name_timestamp(): ...
def resolve_relation(model, app_label: Incomplete | None = None, model_name: Incomplete | None = None): ...
def field_references(model_tuple, field, reference_model_tuple, reference_field_name: Incomplete | None = None, reference_field: Incomplete | None = None): ...
def get_references(state, model_tuple, field_tuple=()) -> Generator[Incomplete]: ...
def field_is_referenced(state, model_tuple, field_tuple): ...
