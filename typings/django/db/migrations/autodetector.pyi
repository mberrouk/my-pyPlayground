from _typeshed import Incomplete
from django.conf import settings as settings
from django.db import models as models
from django.db.migrations import operations as operations
from django.db.migrations.migration import Migration as Migration
from django.db.migrations.operations.models import AlterModelOptions as AlterModelOptions
from django.db.migrations.optimizer import MigrationOptimizer as MigrationOptimizer
from django.db.migrations.questioner import MigrationQuestioner as MigrationQuestioner
from django.db.migrations.utils import COMPILED_REGEX_TYPE as COMPILED_REGEX_TYPE, RegexObject as RegexObject, resolve_relation as resolve_relation
from django.utils.functional import cached_property as cached_property
from enum import Enum
from typing import NamedTuple

class OperationDependency(NamedTuple('OperationDependency', [('app_label', Incomplete), ('model_name', Incomplete), ('field_name', Incomplete), ('type', Incomplete)])):
    class Type(Enum):
        CREATE = 0
        REMOVE = 1
        ALTER = 2
        REMOVE_ORDER_WRT = 3
        ALTER_FOO_TOGETHER = 4
    def model_name_lower(self): ...
    def field_name_lower(self): ...

class MigrationAutodetector:
    from_state: Incomplete
    to_state: Incomplete
    questioner: Incomplete
    existing_apps: Incomplete
    def __init__(self, from_state, to_state, questioner: Incomplete | None = None) -> None: ...
    def changes(self, graph, trim_to_apps: Incomplete | None = None, convert_apps: Incomplete | None = None, migration_name: Incomplete | None = None): ...
    def deep_deconstruct(self, obj): ...
    def only_relation_agnostic_fields(self, fields): ...
    def check_dependency(self, operation, dependency): ...
    def add_operation(self, app_label, operation, dependencies: Incomplete | None = None, beginning: bool = False) -> None: ...
    def swappable_first_key(self, item): ...
    renamed_models: Incomplete
    renamed_models_rel: Incomplete
    def generate_renamed_models(self) -> None: ...
    def generate_created_models(self) -> None: ...
    def generate_created_proxies(self) -> None: ...
    def generate_deleted_models(self) -> None: ...
    def generate_deleted_proxies(self) -> None: ...
    renamed_operations: Incomplete
    def create_renamed_fields(self) -> None: ...
    def generate_renamed_fields(self) -> None: ...
    def generate_added_fields(self) -> None: ...
    def generate_removed_fields(self) -> None: ...
    def generate_altered_fields(self) -> None: ...
    renamed_index_together_values: Incomplete
    def create_altered_indexes(self) -> None: ...
    def generate_added_indexes(self) -> None: ...
    def generate_removed_indexes(self) -> None: ...
    def generate_renamed_indexes(self) -> None: ...
    def create_altered_constraints(self) -> None: ...
    def generate_added_constraints(self) -> None: ...
    def generate_removed_constraints(self) -> None: ...
    def generate_removed_altered_unique_together(self) -> None: ...
    def generate_altered_unique_together(self) -> None: ...
    def generate_altered_db_table(self) -> None: ...
    def generate_altered_db_table_comment(self) -> None: ...
    def generate_altered_options(self) -> None: ...
    def generate_altered_order_with_respect_to(self) -> None: ...
    def generate_altered_managers(self) -> None: ...
    def arrange_for_graph(self, changes, graph, migration_name: Incomplete | None = None): ...
    @classmethod
    def parse_number(cls, name): ...
