from .base import Operation as Operation, OperationCategory as OperationCategory
from _typeshed import Incomplete
from django.db.migrations.utils import field_references as field_references
from django.db.models import NOT_PROVIDED as NOT_PROVIDED
from django.utils.functional import cached_property as cached_property

class FieldOperation(Operation):
    model_name: Incomplete
    name: Incomplete
    field: Incomplete
    def __init__(self, model_name, name, field: Incomplete | None = None) -> None: ...
    def model_name_lower(self): ...
    def name_lower(self): ...
    def is_same_model_operation(self, operation): ...
    def is_same_field_operation(self, operation): ...
    def references_model(self, name, app_label): ...
    def references_field(self, model_name, name, app_label): ...
    def reduce(self, operation, app_label): ...

class AddField(FieldOperation):
    category: Incomplete
    preserve_default: Incomplete
    def __init__(self, model_name, name, field, preserve_default: bool = True) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...
    def reduce(self, operation, app_label): ...

class RemoveField(FieldOperation):
    category: Incomplete
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...
    def reduce(self, operation, app_label): ...

class AlterField(FieldOperation):
    category: Incomplete
    preserve_default: Incomplete
    def __init__(self, model_name, name, field, preserve_default: bool = True) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...
    def reduce(self, operation, app_label): ...

class RenameField(FieldOperation):
    category: Incomplete
    old_name: Incomplete
    new_name: Incomplete
    def __init__(self, model_name, old_name, new_name) -> None: ...
    def old_name_lower(self): ...
    def new_name_lower(self): ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...
    def references_field(self, model_name, name, app_label): ...
    def reduce(self, operation, app_label): ...
