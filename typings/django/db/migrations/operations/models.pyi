from .fields import AddField as AddField, AlterField as AlterField, FieldOperation as FieldOperation, RemoveField as RemoveField, RenameField as RenameField
from _typeshed import Incomplete
from django.db import models as models
from django.db.migrations.operations.base import Operation as Operation, OperationCategory as OperationCategory
from django.db.migrations.state import ModelState as ModelState
from django.db.migrations.utils import field_references as field_references, resolve_relation as resolve_relation
from django.db.models.options import normalize_together as normalize_together
from django.utils.functional import cached_property as cached_property

class ModelOperation(Operation):
    name: Incomplete
    def __init__(self, name) -> None: ...
    def name_lower(self): ...
    def references_model(self, name, app_label): ...
    def reduce(self, operation, app_label): ...
    def can_reduce_through(self, operation, app_label): ...

class CreateModel(ModelOperation):
    category: Incomplete
    serialization_expand_args: Incomplete
    fields: Incomplete
    options: Incomplete
    bases: Incomplete
    managers: Incomplete
    def __init__(self, name, fields, options: Incomplete | None = None, bases: Incomplete | None = None, managers: Incomplete | None = None) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...
    def references_model(self, name, app_label): ...
    def reduce(self, operation, app_label): ...

class DeleteModel(ModelOperation):
    category: Incomplete
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def references_model(self, name, app_label): ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...

class RenameModel(ModelOperation):
    category: Incomplete
    old_name: Incomplete
    new_name: Incomplete
    def __init__(self, old_name, new_name) -> None: ...
    def old_name_lower(self): ...
    def new_name_lower(self): ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def references_model(self, name, app_label): ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...
    def reduce(self, operation, app_label): ...

class ModelOptionOperation(ModelOperation):
    category: Incomplete
    def reduce(self, operation, app_label): ...

class AlterModelTable(ModelOptionOperation):
    table: Incomplete
    def __init__(self, name, table) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state): ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...

class AlterModelTableComment(ModelOptionOperation):
    table_comment: Incomplete
    def __init__(self, name, table_comment) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state): ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...

class AlterTogetherOptionOperation(ModelOptionOperation):
    option_name: Incomplete
    def __init__(self, name, option_value) -> None: ...
    def option_value(self): ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state): ...
    def references_field(self, model_name, name, app_label): ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...
    def can_reduce_through(self, operation, app_label): ...

class AlterUniqueTogether(AlterTogetherOptionOperation):
    option_name: str
    def __init__(self, name, unique_together) -> None: ...

class AlterIndexTogether(AlterTogetherOptionOperation):
    option_name: str
    def __init__(self, name, index_together) -> None: ...

class AlterOrderWithRespectTo(ModelOptionOperation):
    option_name: str
    order_with_respect_to: Incomplete
    def __init__(self, name, order_with_respect_to) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def references_field(self, model_name, name, app_label): ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...

class AlterModelOptions(ModelOptionOperation):
    ALTER_OPTION_KEYS: Incomplete
    options: Incomplete
    def __init__(self, name, options) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...

class AlterModelManagers(ModelOptionOperation):
    serialization_expand_args: Incomplete
    managers: Incomplete
    def __init__(self, name, managers) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...

class IndexOperation(Operation):
    option_name: str
    def model_name_lower(self): ...

class AddIndex(IndexOperation):
    category: Incomplete
    model_name: Incomplete
    index: Incomplete
    def __init__(self, model_name, index) -> None: ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def deconstruct(self): ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...
    def reduce(self, operation, app_label): ...

class RemoveIndex(IndexOperation):
    category: Incomplete
    model_name: Incomplete
    name: Incomplete
    def __init__(self, model_name, name) -> None: ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def deconstruct(self): ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...

class RenameIndex(IndexOperation):
    category: Incomplete
    model_name: Incomplete
    new_name: Incomplete
    old_name: Incomplete
    old_fields: Incomplete
    def __init__(self, model_name, new_name, old_name: Incomplete | None = None, old_fields: Incomplete | None = None) -> None: ...
    def old_name_lower(self): ...
    def new_name_lower(self): ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...
    def reduce(self, operation, app_label): ...

class AddConstraint(IndexOperation):
    category: Incomplete
    option_name: str
    model_name: Incomplete
    constraint: Incomplete
    def __init__(self, model_name, constraint) -> None: ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def deconstruct(self): ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...
    def reduce(self, operation, app_label): ...

class RemoveConstraint(IndexOperation):
    category: Incomplete
    option_name: str
    model_name: Incomplete
    name: Incomplete
    def __init__(self, model_name, name) -> None: ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def deconstruct(self): ...
    def describe(self): ...
    @property
    def migration_name_fragment(self): ...
