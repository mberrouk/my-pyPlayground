import enum
from _typeshed import Incomplete
from django.db import router as router

class OperationCategory(str, enum.Enum):
    ADDITION = '+'
    REMOVAL = '-'
    ALTERATION = '~'
    PYTHON = 'p'
    SQL = 's'
    MIXED = '?'

class Operation:
    reversible: bool
    reduces_to_sql: bool
    atomic: bool
    elidable: bool
    serialization_expand_args: Incomplete
    category: Incomplete
    def __new__(cls, *args, **kwargs): ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state) -> None: ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state) -> None: ...
    def describe(self): ...
    def formatted_description(self): ...
    @property
    def migration_name_fragment(self) -> None: ...
    def references_model(self, name, app_label): ...
    def references_field(self, model_name, name, app_label): ...
    def allow_migrate_model(self, connection_alias, model): ...
    def reduce(self, operation, app_label): ...
