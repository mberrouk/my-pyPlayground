from _typeshed import Incomplete
from django import template as template
from django.apps import apps as apps
from django.utils.encoding import iri_to_uri as iri_to_uri
from django.utils.html import conditional_escape as conditional_escape

register: Incomplete

class PrefixNode(template.Node):
    varname: Incomplete
    name: Incomplete
    def __init__(self, varname: Incomplete | None = None, name: Incomplete | None = None) -> None: ...
    @classmethod
    def handle_token(cls, parser, token, name): ...
    @classmethod
    def handle_simple(cls, name): ...
    def render(self, context): ...

def get_static_prefix(parser, token): ...
def get_media_prefix(parser, token): ...

class StaticNode(template.Node):
    child_nodelists: Incomplete
    path: Incomplete
    varname: Incomplete
    def __init__(self, varname: Incomplete | None = None, path: Incomplete | None = None) -> None: ...
    def url(self, context): ...
    def render(self, context): ...
    @classmethod
    def handle_simple(cls, path): ...
    @classmethod
    def handle_token(cls, parser, token): ...

def do_static(parser, token): ...
def static(path): ...
