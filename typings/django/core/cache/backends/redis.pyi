from _typeshed import Incomplete
from django.core.cache.backends.base import BaseCache as BaseCache, DEFAULT_TIMEOUT as DEFAULT_TIMEOUT
from django.utils.functional import cached_property as cached_property
from django.utils.module_loading import import_string as import_string

class RedisSerializer:
    protocol: Incomplete
    def __init__(self, protocol: Incomplete | None = None) -> None: ...
    def dumps(self, obj): ...
    def loads(self, data): ...

class RedisCacheClient:
    def __init__(self, servers, serializer: Incomplete | None = None, pool_class: Incomplete | None = None, parser_class: Incomplete | None = None, **options) -> None: ...
    def get_client(self, key: Incomplete | None = None, *, write: bool = False): ...
    def add(self, key, value, timeout): ...
    def get(self, key, default): ...
    def set(self, key, value, timeout) -> None: ...
    def touch(self, key, timeout): ...
    def delete(self, key): ...
    def get_many(self, keys): ...
    def has_key(self, key): ...
    def incr(self, key, delta): ...
    def set_many(self, data, timeout) -> None: ...
    def delete_many(self, keys) -> None: ...
    def clear(self): ...

class RedisCache(BaseCache):
    def __init__(self, server, params) -> None: ...
    def get_backend_timeout(self, timeout=...): ...
    def add(self, key, value, timeout=..., version: Incomplete | None = None): ...
    def get(self, key, default: Incomplete | None = None, version: Incomplete | None = None): ...
    def set(self, key, value, timeout=..., version: Incomplete | None = None) -> None: ...
    def touch(self, key, timeout=..., version: Incomplete | None = None): ...
    def delete(self, key, version: Incomplete | None = None): ...
    def get_many(self, keys, version: Incomplete | None = None): ...
    def has_key(self, key, version: Incomplete | None = None): ...
    def incr(self, key, delta: int = 1, version: Incomplete | None = None): ...
    def set_many(self, data, timeout=..., version: Incomplete | None = None): ...
    def delete_many(self, keys, version: Incomplete | None = None) -> None: ...
    def clear(self): ...
