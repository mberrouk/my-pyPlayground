from _typeshed import Incomplete
from django.apps import apps as apps
from django.conf import settings as settings
from django.core.exceptions import ImproperlyConfigured as ImproperlyConfigured
from django.core.management.base import BaseCommand as BaseCommand, CommandError as CommandError, CommandParser as CommandParser, handle_default_options as handle_default_options
from django.core.management.color import color_style as color_style
from django.utils import autoreload as autoreload

def find_commands(management_dir): ...
def load_command_class(app_name, name): ...
def get_commands(): ...
def call_command(command_name, *args, **options): ...

class ManagementUtility:
    argv: Incomplete
    prog_name: Incomplete
    settings_exception: Incomplete
    def __init__(self, argv: Incomplete | None = None) -> None: ...
    def main_help_text(self, commands_only: bool = False): ...
    def fetch_command(self, subcommand): ...
    def autocomplete(self): ...
    def execute(self) -> None: ...

def execute_from_command_line(argv: Incomplete | None = None) -> None: ...
