from _typeshed import Incomplete
from django.conf import settings as settings
from django.core.management.base import BaseCommand as BaseCommand, CommandError as CommandError
from django.core.management.utils import find_formatters as find_formatters, handle_extensions as handle_extensions, run_formatters as run_formatters
from django.template import Context as Context, Engine as Engine
from django.utils import archive as archive
from django.utils.http import parse_header_parameters as parse_header_parameters
from django.utils.version import get_docs_version as get_docs_version

class TemplateCommand(BaseCommand):
    requires_system_checks: Incomplete
    url_schemes: Incomplete
    rewrite_template_suffixes: Incomplete
    def add_arguments(self, parser) -> None: ...
    app_or_project: Incomplete
    a_or_an: Incomplete
    paths_to_remove: Incomplete
    verbosity: Incomplete
    def handle(self, app_or_project, name, target: Incomplete | None = None, **options): ...
    def handle_template(self, template, subdir): ...
    def validate_name(self, name, name_or_dir: str = 'name') -> None: ...
    def download(self, url): ...
    def splitext(self, the_path): ...
    def extract(self, filename): ...
    def is_url(self, template): ...
    def apply_umask(self, old_path, new_path) -> None: ...
    def make_writeable(self, filename) -> None: ...
