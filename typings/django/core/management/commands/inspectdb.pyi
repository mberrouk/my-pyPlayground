from _typeshed import Incomplete
from collections.abc import Generator
from django.core.management.base import BaseCommand as BaseCommand, CommandError as CommandError
from django.db import DEFAULT_DB_ALIAS as DEFAULT_DB_ALIAS, connections as connections
from django.db.models.constants import LOOKUP_SEP as LOOKUP_SEP

class Command(BaseCommand):
    help: str
    requires_system_checks: Incomplete
    stealth_options: Incomplete
    db_module: str
    def add_arguments(self, parser) -> None: ...
    def handle(self, **options) -> None: ...
    def handle_inspection(self, options) -> Generator[Incomplete, Incomplete]: ...
    def normalize_col_name(self, col_name, used_column_names, is_relation): ...
    def normalize_table_name(self, table_name): ...
    def get_field_type(self, connection, table_name, row): ...
    def get_meta(self, table_name, constraints, column_to_field_name, is_view, is_partition, comment): ...
