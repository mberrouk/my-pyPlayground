from _typeshed import Incomplete
from django.core.mail.message import BadHeaderError as BadHeaderError, DEFAULT_ATTACHMENT_MIME_TYPE as DEFAULT_ATTACHMENT_MIME_TYPE, EmailMessage as EmailMessage, EmailMultiAlternatives as EmailMultiAlternatives, SafeMIMEMultipart as SafeMIMEMultipart, SafeMIMEText as SafeMIMEText, forbid_multi_line_headers as forbid_multi_line_headers, make_msgid as make_msgid
from django.core.mail.utils import CachedDnsName as CachedDnsName, DNS_NAME as DNS_NAME

__all__ = ['CachedDnsName', 'DNS_NAME', 'EmailMessage', 'EmailMultiAlternatives', 'SafeMIMEText', 'SafeMIMEMultipart', 'DEFAULT_ATTACHMENT_MIME_TYPE', 'make_msgid', 'BadHeaderError', 'forbid_multi_line_headers', 'get_connection', 'send_mail', 'send_mass_mail', 'mail_admins', 'mail_managers']

def get_connection(backend: Incomplete | None = None, fail_silently: bool = False, **kwds): ...
def send_mail(subject, message, from_email, recipient_list, fail_silently: bool = False, auth_user: Incomplete | None = None, auth_password: Incomplete | None = None, connection: Incomplete | None = None, html_message: Incomplete | None = None): ...
def send_mass_mail(datatuple, fail_silently: bool = False, auth_user: Incomplete | None = None, auth_password: Incomplete | None = None, connection: Incomplete | None = None): ...
def mail_admins(subject, message, fail_silently: bool = False, connection: Incomplete | None = None, html_message: Incomplete | None = None) -> None: ...
def mail_managers(subject, message, fail_silently: bool = False, connection: Incomplete | None = None, html_message: Incomplete | None = None) -> None: ...
