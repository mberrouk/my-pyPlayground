from _typeshed import Incomplete
from django.core.exceptions import SuspiciousFileOperation as SuspiciousFileOperation
from django.core.files import File as File
from django.core.files.utils import validate_file_name as validate_file_name
from django.utils.crypto import get_random_string as get_random_string
from django.utils.text import get_valid_filename as get_valid_filename

class Storage:
    def open(self, name, mode: str = 'rb'): ...
    def save(self, name, content, max_length: Incomplete | None = None): ...
    def is_name_available(self, name, max_length: Incomplete | None = None): ...
    def get_valid_name(self, name): ...
    def get_alternative_name(self, file_root, file_ext): ...
    def get_available_name(self, name, max_length: Incomplete | None = None): ...
    def generate_filename(self, filename): ...
    def path(self, name) -> None: ...
    def delete(self, name) -> None: ...
    def exists(self, name) -> None: ...
    def listdir(self, path) -> None: ...
    def size(self, name) -> None: ...
    def url(self, name) -> None: ...
    def get_accessed_time(self, name) -> None: ...
    def get_created_time(self, name) -> None: ...
    def get_modified_time(self, name) -> None: ...
