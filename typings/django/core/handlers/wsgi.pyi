from _typeshed import Incomplete
from django.conf import settings as settings
from django.core import signals as signals
from django.core.handlers import base as base
from django.http import HttpRequest as HttpRequest, QueryDict as QueryDict, parse_cookie as parse_cookie
from django.urls import set_script_prefix as set_script_prefix
from django.utils.encoding import repercent_broken_unicode as repercent_broken_unicode
from django.utils.functional import cached_property as cached_property
from io import IOBase

class LimitedStream(IOBase):
    limit: Incomplete
    def __init__(self, stream, limit) -> None: ...
    def read(self, size: int = -1, /): ...
    def readline(self, size: int = -1, /): ...

class WSGIRequest(HttpRequest):
    environ: Incomplete
    path_info: Incomplete
    path: Incomplete
    META: Incomplete
    method: Incomplete
    resolver_match: Incomplete
    def __init__(self, environ) -> None: ...
    def GET(self): ...
    def COOKIES(self): ...
    @property
    def FILES(self): ...
    POST: Incomplete

class WSGIHandler(base.BaseHandler):
    request_class = WSGIRequest
    def __init__(self, *args, **kwargs) -> None: ...
    def __call__(self, environ, start_response): ...

def get_path_info(environ): ...
def get_script_name(environ): ...
def get_bytes_from_wsgi(environ, key, default): ...
def get_str_from_wsgi(environ, key, default): ...
