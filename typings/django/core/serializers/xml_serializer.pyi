from _typeshed import Incomplete
from django.apps import apps as apps
from django.conf import settings as settings
from django.core.exceptions import ObjectDoesNotExist as ObjectDoesNotExist
from django.core.serializers import base as base
from django.db import DEFAULT_DB_ALIAS as DEFAULT_DB_ALIAS, models as models
from django.utils.xmlutils import SimplerXMLGenerator as SimplerXMLGenerator, UnserializableContentError as UnserializableContentError
from xml.sax.expatreader import ExpatParser as _ExpatParser

class Serializer(base.Serializer):
    def indent(self, level) -> None: ...
    xml: Incomplete
    def start_serialization(self) -> None: ...
    def end_serialization(self) -> None: ...
    def start_object(self, obj) -> None: ...
    def end_object(self, obj) -> None: ...
    def handle_field(self, obj, field) -> None: ...
    def handle_fk_field(self, obj, field) -> None: ...
    def handle_m2m_field(self, obj, field): ...

class Deserializer(base.Deserializer):
    handle_forward_references: Incomplete
    event_stream: Incomplete
    db: Incomplete
    ignore: Incomplete
    def __init__(self, stream_or_string, *, using=..., ignorenonexistent: bool = False, **options) -> None: ...
    def __next__(self): ...

def getInnerText(node): ...

class DefusedExpatParser(_ExpatParser):
    def __init__(self, *args, **kwargs) -> None: ...
    def start_doctype_decl(self, name, sysid, pubid, has_internal_subset) -> None: ...
    def entity_decl(self, name, is_parameter_entity, value, base, sysid, pubid, notation_name) -> None: ...
    def unparsed_entity_decl(self, name, base, sysid, pubid, notation_name) -> None: ...
    def external_entity_ref_handler(self, context, base, sysid, pubid) -> None: ...
    def reset(self) -> None: ...

class DefusedXmlException(ValueError): ...

class DTDForbidden(DefusedXmlException):
    name: Incomplete
    sysid: Incomplete
    pubid: Incomplete
    def __init__(self, name, sysid, pubid) -> None: ...

class EntitiesForbidden(DefusedXmlException):
    name: Incomplete
    value: Incomplete
    base: Incomplete
    sysid: Incomplete
    pubid: Incomplete
    notation_name: Incomplete
    def __init__(self, name, value, base, sysid, pubid, notation_name) -> None: ...

class ExternalReferenceForbidden(DefusedXmlException):
    context: Incomplete
    base: Incomplete
    sysid: Incomplete
    pubid: Incomplete
    def __init__(self, context, base, sysid, pubid) -> None: ...
