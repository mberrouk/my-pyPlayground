from _typeshed import Incomplete
from collections.abc import Generator
from django.apps import apps as apps
from django.core.serializers import base as base
from django.db import DEFAULT_DB_ALIAS as DEFAULT_DB_ALIAS, models as models
from django.utils.encoding import is_protected_type as is_protected_type

class Serializer(base.Serializer):
    internal_use_only: bool
    objects: Incomplete
    def start_serialization(self) -> None: ...
    def end_serialization(self) -> None: ...
    def start_object(self, obj) -> None: ...
    def end_object(self, obj) -> None: ...
    def get_dump_object(self, obj): ...
    def handle_field(self, obj, field) -> None: ...
    def handle_fk_field(self, obj, field) -> None: ...
    def handle_m2m_field(self, obj, field): ...
    def getvalue(self): ...

def Deserializer(object_list, *, using=..., ignorenonexistent: bool = False, **options) -> Generator[Incomplete]: ...
