from _typeshed import Incomplete
from django.conf import settings as settings
from django.utils.crypto import constant_time_compare as constant_time_compare, salted_hmac as salted_hmac
from django.utils.encoding import force_bytes as force_bytes
from django.utils.module_loading import import_string as import_string

BASE62_ALPHABET: str

class BadSignature(Exception): ...
class SignatureExpired(BadSignature): ...

def b62_encode(s): ...
def b62_decode(s): ...
def b64_encode(s): ...
def b64_decode(s): ...
def base64_hmac(salt, value, key, algorithm: str = 'sha1'): ...
def get_cookie_signer(salt: str = 'django.core.signing.get_cookie_signer'): ...

class JSONSerializer:
    def dumps(self, obj): ...
    def loads(self, data): ...

def dumps(obj, key: Incomplete | None = None, salt: str = 'django.core.signing', serializer=..., compress: bool = False): ...
def loads(s, key: Incomplete | None = None, salt: str = 'django.core.signing', serializer=..., max_age: Incomplete | None = None, fallback_keys: Incomplete | None = None): ...

class Signer:
    key: Incomplete
    fallback_keys: Incomplete
    sep: Incomplete
    salt: Incomplete
    algorithm: Incomplete
    def __init__(self, *, key: Incomplete | None = None, sep: str = ':', salt: Incomplete | None = None, algorithm: Incomplete | None = None, fallback_keys: Incomplete | None = None) -> None: ...
    def signature(self, value, key: Incomplete | None = None): ...
    def sign(self, value): ...
    def unsign(self, signed_value): ...
    def sign_object(self, obj, serializer=..., compress: bool = False): ...
    def unsign_object(self, signed_obj, serializer=..., **kwargs): ...

class TimestampSigner(Signer):
    def timestamp(self): ...
    def sign(self, value): ...
    def unsign(self, value, max_age: Incomplete | None = None): ...
