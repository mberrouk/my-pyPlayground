from .exceptions import ChannelFull as ChannelFull, InvalidChannelLayerError as InvalidChannelLayerError
from _typeshed import Incomplete
from channels import DEFAULT_CHANNEL_LAYER as DEFAULT_CHANNEL_LAYER

class ChannelLayerManager:
    backends: Incomplete
    def __init__(self) -> None: ...
    @property
    def configs(self): ...
    def make_backend(self, name): ...
    def make_test_backend(self, name): ...
    def __getitem__(self, key): ...
    def __contains__(self, key) -> bool: ...
    def set(self, key, layer): ...

class BaseChannelLayer:
    MAX_NAME_LENGTH: int
    expiry: Incomplete
    capacity: Incomplete
    channel_capacity: Incomplete
    def __init__(self, expiry: int = 60, capacity: int = 100, channel_capacity: Incomplete | None = None) -> None: ...
    def compile_capacities(self, channel_capacity): ...
    def get_capacity(self, channel): ...
    def match_type_and_length(self, name): ...
    channel_name_regex: Incomplete
    group_name_regex: Incomplete
    invalid_name_error: Incomplete
    def valid_channel_name(self, name, receive: bool = False): ...
    def valid_group_name(self, name): ...
    def valid_channel_names(self, names, receive: bool = False): ...
    def non_local_name(self, name): ...
    async def send(self, channel, message) -> None: ...
    async def receive(self, channel) -> None: ...
    async def new_channel(self) -> None: ...
    async def flush(self) -> None: ...
    async def group_add(self, group, channel) -> None: ...
    async def group_discard(self, group, channel) -> None: ...
    async def group_send(self, group, message) -> None: ...

class InMemoryChannelLayer(BaseChannelLayer):
    channels: Incomplete
    groups: Incomplete
    group_expiry: Incomplete
    def __init__(self, expiry: int = 60, group_expiry: int = 86400, capacity: int = 100, channel_capacity: Incomplete | None = None, **kwargs) -> None: ...
    extensions: Incomplete
    async def send(self, channel, message) -> None: ...
    async def receive(self, channel): ...
    async def new_channel(self, prefix: str = 'specific.'): ...
    async def flush(self) -> None: ...
    async def close(self) -> None: ...
    async def group_add(self, group, channel) -> None: ...
    async def group_discard(self, group, channel) -> None: ...
    async def group_send(self, group, message) -> None: ...

def get_channel_layer(alias=...): ...

channel_layers: Incomplete
